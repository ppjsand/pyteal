<?xml version="1.0" encoding="UTF-8"?>
<gear_ruleset>
<gear_control>
  <default_event_comp value="CNM"/>
</gear_control>
<events>
   <event id="EF000001" comp="CNM" min_time_in_pool="500"/>
   <event id="EF000002" comp="CNM" min_time_in_pool="500"/>
   <event id="EF000003" comp="CNM" min_time_in_pool="500"/>
   <event id="EFS00001" comp="CNM" min_time_in_pool="500"/>
   <event id="EFS00002" comp="CNM" min_time_in_pool="500"/>
   <event id="EFS00003" comp="CNM" min_time_in_pool="500"/>
   <event id="E0000001" comp="CNM"/>
   <event id="E0000002" comp="CNM" name="E2"/>
   <event id="E0000003" comp="CNM" name="E3"/>
   <event id="E0000004" comp="CNM" name="Everyveryveryveryveryverylongname4"/>
   <event id="E0000005" comp="CNM" name="E5"/>
</events>
<constants>
   <constant name="E1" type="event_id" value="E0000001"/>
   <constant name="E4" type="event_id" value="E0000004"/>
   <constant name="E1andE4" type="set_of_event_ids" value="E1,Everyveryveryveryveryverylongname4"/>
   <constant name="E1E2E3E4" type="set_of_event_ids" value="E1,E2,E3,E3,E4"/>
</constants>
<analyze>
   <!-- Start base setup  -->
   <rule name="EFS000001 suppressions">
      <condition>
            <event_equals id="EF000001" comp="CNM"/>
      </condition>
      <action>
        <suppress_events ids="EFS00001" comp="CNM"/>
        <create_alert id="Alert 01"/>
      </action>
   </rule>
   <rule name="EFS000002 suppressions">
      <condition>
            <event_equals id="EF000002" comp="CNM"/>
      </condition>
      <action>
        <suppress_events ids="EFS00002" comp="CNM"/>
        <create_alert id="Alert 02"/>
      </action>
   </rule>
   <rule name="EFS000003 suppressions">
      <condition>
            <event_equals id="EF000003" comp="CNM"/>
      </condition>
      <action>
        <suppress_events ids="EFS00003" comp="CNM"/>
        <create_alert id="Alert 03"/>
      </action>
   </rule>   
   <!-- END BASE SETUP ... at this point should have 
        EF000001, EF000002, and EF000003 moving forward
        EFS00001, EFS00002, and EFS00003 moving forward and suppressed by one above
        
        This should create 3 alerts (1,2,3) each with one condition event and one suppression
    -->
    <!-- NOTE INPUT EVENT DATA CHANGE: Added raw data entry for neighbor_loc to all E0000005 events -->

   <!--  NOTE: This is identical to t012 but instead of using all_events, any_events with num set to 
               the number of ids is used.   Identical results is expected  -->
  
   <!--  Subtest 1: 
             
             Test or element scope.
             
             1 alert: 
                1 alert with 3 CEs ... the E5s.   With a location scoped to pciSlot
                            
    -->
   <rule name="event_occurred wit or 1">
      <condition default_event_comp="CNM">
        <or scope="C:pciSlot">
         <event_occurred id="E5" num="3"/>
        </or>
      </condition>
      <action>
        <create_alert id="Alert 04"/>
      </action>
   </rule>
   
   <!--  Subtest 2: 
             
             Test or
             
             3 alerts: 
                1 alert with with one CE E2 at DM3
                1 alert with 4 CEs the ones at SL2 (3 E5 and one E2)
                1 alert with 2 CEs the ones at SL1 
                           
    -->
   <rule name="or 2">
      <condition default_event_comp="CNM">
        <or location_match="unique" scope="C:pciSlot">
         <event_equals id="E5"/>
         <event_equals id="E2"/>
        </or>
      </condition>
      <action>
        <create_alert id="Alert 05"/>
      </action>
   </rule>
   
   <!--  Subtest 3: 
             
             Test or with ignore 
             
             1 alert: 
                1 alert with 7 CEs ... any with E2 or E5
                           
    -->
   <rule name="or 3">
      <condition default_event_comp="CNM">
        <or location_match="ignore">
         <event_equals id="E5"/>
         <event_equals id="E2"/>
        </or>
      </condition>
      <action>
        <create_alert id="Alert 06"/>
      </action>
   </rule>
   
   <!--  Subtest 4: 
             
             Test suppression
             
             Suppress all E1s
             
             0 Alert
                           
    -->
   <rule name="suppression 1a">
      <condition default_event_comp="CNM">
         <event_equals id="E1" scope="C:pciSlot"/>
      </condition>
      <action>
        <suppress_events ids="E1" ignore_loc="true"/>
      </action>
   </rule>
   <rule name="suppression 1b">
       <condition default_event_comp="CNM">
          <event_equals id="E1"/>
       </condition>
       <action>
          <create_alert id="Alert 07"/> 
       </action>
   </rule>
   
   <!--  Subtest 5: 
             
             Test suppression
             
             Suppress one of the E3s
             
             3 Alerts for the 3 remaining E3s
                3 alerts with on CE each of the non-DM3 locations
                           
    -->
   <rule name="suppression 2a">
      <condition default_event_comp="CNM">
         <any_events ids="E3" num="1" instances="3" instance_loc_comp="C:dimm"/>
      </condition>
      <action>
        <suppress_events events="GEAR[condition_events]"/>
      </action>
   </rule>
   <rule name="suppression 2b">
       <condition default_event_comp="CNM">
          <event_equals id="E3"/>
       </condition>
       <action>
          <create_alert id="Alert 08"/> 
       </action>
   </rule>
   
</analyze>
</gear_ruleset>