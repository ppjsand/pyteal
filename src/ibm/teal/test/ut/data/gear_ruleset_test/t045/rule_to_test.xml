<?xml version="1.0" encoding="UTF-8"?>


<gear_ruleset>
<gear_control>
  <default_event_comp value="CNM"/>
</gear_control>
<events>
   <event id="Event 01" name="ME1"/>
   <event id="Event 02" name="ME2"/>
   <event id="Event 03" name="ME3" pool_extension_time="3" min_time_in_pool="5"/>   
   <event id="Event 04" name="ME4"/>
   <event id="Event 05" name="ME5" min_time_in_pool="10"/>
</events>
<constants>
   <constant name="ME1and3" type="set_of_event_ids" value="ME1,Event 03"/>
</constants>
<analyze>
   <rule name="Sample Rule alert creation">
      <description>If Event 01 or 03 create Alert 01</description>
      <condition>
        <and>
           <evaluate class="ibm.teal.test.ut.data.gear_ruleset_test.t045.test_class.Class044">
              <parm name="Elvis" value="is in the building"/>
              <parm name="cur_event" value="GEAR[cur_event]"/>
              <parm name="name" value="GEAR[name]"/>
              <parm name="mode" value="GEAR[mode]"/>
              <parm name="neighbor" value="GEAR[cur_event.ext.neighbor]"/>
              <parm name="src_loc" value="GEAR[cur_event.src_loc]"/>
              <parm name="rpt_loc" value="GEAR[cur_event.rpt_loc]"/>
              <parm name="event_id" value="GEAR[cur_event.event_id]"/>
           </evaluate>
           <event_equals src_loc="GEAR[cur_event.ext.neighbor]" scope="C:motherboard"/>
        </and>
      </condition>
      <action>
        <description>Create alert (and suppress Event 01 and Event 03)</description>
        <suppress_events events="GEAR[condition_events]"/>
        <create_alert id="Alert 01"/>
        <execute  name="ExecuteTest01" class="ibm.teal.test.ut.data.gear_ruleset_test.t045.test_class.Class044">
        </execute>
        <execute  name="ExecuteTest02" class="ibm.teal.test.ut.data.gear_ruleset_test.t045.test_class.Class044">
          <parm name="a2" value="GEAR[executed.ExecuteTest01.a]"/>
          <parm name="b2" value="GEAR[executed.ExecuteTest01.b]"/>
          <parm name="last_condition_event" value="GEAR[last_condition_event]"/>
          <parm name="this is" value="a test"/>l          
        </execute>
      </action>
   </rule>
   <rule name="rule2">
     <condition>
      <event_equals rpt_loc="GEAR[cur_event.ext.neighbor]" scope="C:pciSlot"/>
     </condition>
     <action>
      <suppress_events events="GEAR[condition_events]"/>
      <create_alert id="Alert 02"/>
     </action>
   </rule>
 </analyze>
<pool_closure>
    <rule name="Make everything an alert">
        <condition>
           <true/>
        </condition>
        <action>
           <suppress_events events="GEAR[condition_events]"/>
           <create_alert id="Alert US"/>
        </action>
    </rule>
</pool_closure>
</gear_ruleset>