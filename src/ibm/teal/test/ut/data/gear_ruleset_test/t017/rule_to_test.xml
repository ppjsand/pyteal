<?xml version="1.0" encoding="UTF-8"?>
<gear_ruleset>
<gear_control>
  <default_event_comp value="CNM"/>
</gear_control>
<events>
   <event id="EF000001" comp="CNM" min_time_in_pool="500"/>
   <event id="EF000002" comp="CNM" min_time_in_pool="500"/>
   <event id="EF000003" comp="CNM" min_time_in_pool="500"/>
   <event id="EFS00001" comp="CNM" min_time_in_pool="500"/>
   <event id="EFS00002" comp="CNM" min_time_in_pool="500"/>
   <event id="EFS00003" comp="CNM" min_time_in_pool="500"/>
   <event id="E0000001" comp="CNM"/>
   <event id="E0000002" comp="CNM" name="E2"/>
   <event id="E0000003" comp="CNM" name="E3"/>
   <event id="E0000004" comp="CNM" name="Everyveryveryveryveryverylongname4"/>
   <event id="E0000005" comp="CNM" name="E5"/>
</events>
<constants>
   <constant name="E1" type="event_id" value="E0000001"/>
   <constant name="E4" type="event_id" value="E0000004"/>
   <constant name="E1andE4" type="set_of_event_ids" value="E1,Everyveryveryveryveryverylongname4"/>
   <constant name="E1E2E3E4" type="set_of_event_ids" value="E1,E2,E3,E3,E4"/>
</constants>
<analyze>
   <!-- Start base setup  -->
   <rule name="EFS000001 suppressions">
      <condition>
            <event_equals id="EF000001" comp="CNM"/>
      </condition>
      <action>
        <suppress_events ids="EFS00001" comp="CNM"/>
        <create_alert id="Alert 01"/>
      </action>
   </rule>
   <rule name="EFS000002 suppressions">
      <condition>
            <event_equals id="EF000002" comp="CNM"/>
      </condition>
      <action>
        <suppress_events ids="EFS00002" comp="CNM"/>
        <create_alert id="Alert 02"/>
      </action>
   </rule>
   <rule name="EFS000003 suppressions">
      <condition>
            <event_equals id="EF000003" comp="CNM"/>
      </condition>
      <action>
        <suppress_events ids="EFS00003" comp="CNM"/>
        <create_alert id="Alert 03"/>
      </action>
   </rule>   
   <!-- END BASE SETUP ... at this point should have 
        EF000001, EF000002, and EF000003 moving forward
        EFS00001, EFS00002, and EFS00003 moving forward and suppressed by one above
        
        This should create 3 alerts (1,2,3) each with one condition event and one suppression
    -->
    <!-- NOTE INPUT EVENT DATA CHANGE: Added raw data entry for neighbor_loc to all E0000005 events -->

   <!--  NOTE: This is identical to t012 but instead of using all_events, any_events with num set to 
               the number of ids is used.   Identical results is expected  -->
  
   <!--  Subtest 1: 
             
             Test evaluate
             
             4 alert: 
                4 alerts with 1 CEs one for each E0000002 at full scope locations
                            
    -->
   <rule name="evaluate 1">
      <condition default_event_comp="CNM">
         <evaluate name="testev" ext_class="ibm.teal.test.ut.data.gear_ruleset_test.t017.test_class.Evaluate017">
           <parm name="Elvis" value="is in the building"/>
           <parm name="name" value="GEAR[name]"/>
           <parm name="mode" value="GEAR[mode]"/>
           <parm name="from_conf" value="GEAR[conf_dict.passed_value]"/>
           <parm name="id" value="E0000002"/>
           <parm name="count" value="1"/>
        </evaluate>
      </condition>
      <action>
        <create_alert id="Alert 04"/>
      </action>
   </rule>
   
   <!--  Subtest 2: 
             
             Test evaluate + init alert 
             
             4 alert: 
                4 alerts with 1 CEs one for each E0000003 at full scope locations
                            
    -->
   <rule name="evaluate 2">
      <condition default_event_comp="CNM">
         <evaluate name="testev" ext_class="ibm.teal.test.ut.data.gear_ruleset_test.t017.test_class.Evaluate017">
           <parm name="Elvis" value="is in the building"/>
           <parm name="name" value="GEAR[name]"/>
           <parm name="mode" value="GEAR[mode]"/>
           <parm name="from_conf" value="GEAR[conf_dict.passed_value]"/>
           <parm name="id" value="E0000003"/>
           <parm name="count" value="1"/>
        </evaluate>
      </condition>
      <action>
        <create_alert id="Alert 05" init_class="ibm.teal.test.ut.data.gear_ruleset_test.t017.test_class.InitAlert017"/>
      </action>
   </rule>
      
   <!--  Subtest 3: 
             
             Test execute action 
             
             4 alert: 
                4 alerts with 1 CEs one for each E0000003 at full scope locations
                            
    -->
   <rule name="evaluate 1">
      <condition default_event_comp="CNM">
         <evaluate name="testev" ext_class="ibm.teal.test.ut.data.gear_ruleset_test.t017.test_class.Evaluate017">
           <parm name="Elvis" value="is in the building"/>
           <parm name="name" value="GEAR[name]"/>
           <parm name="mode" value="GEAR[mode]"/>
           <parm name="from_conf" value="GEAR[conf_dict.passed_value]"/>
           <parm name="id" value="E0000003"/>
           <parm name="count" value="1"/>
        </evaluate>
      </condition>
      <action>
        <execute name="Testex01" ext_class="ibm.teal.test.ut.data.gear_ruleset_test.t017.test_class.Execute017"/>
      </action>
   </rule>
      
</analyze>
</gear_ruleset>