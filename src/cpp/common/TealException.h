// begin_generated_IBM_copyright_prolog
//
// This is an automatically generated copyright prolog.
// After initializing,  DO NOT MODIFY OR MOVE
// ================================================================
//
// (C) Copyright IBM Corp.  2010,2011
// Eclipse Public License (EPL)
//
// ================================================================
//
// end_generated_IBM_copyright_prolog
/** 
 * \file tealException.h
 *
 */

#ifndef _H_TEALEXCEPTION_
#define _H_TEALEXCEPTION_

#include <stdexcept>
#include <string>

namespace TEAL {

  /** 
   * \brief Exception classes used in TEAL common code.
   *
   * This class represents an exception generated by TEAL or
   * one of its subcomponents. 
   */
  class TealException : public std::exception {
   public:
    /**
     * \brief Construct a TealException
     *
     * Take the passed in string and create a TealException object.
     *
     * \param s A std::string representing the exception.
     */

    TealException(const std::string& s) throw() : msg(s) {} ;
    /**
     * \brief Return the string representation of the exception.
     * 
     * Return a C-string representation of the exception. Follows
     * conventions of std::exception interfaces.
     *
     * \retval A C-string representing the exception.
     */
    virtual const char *what() throw() { return msg.c_str(); };
    /**
     * \brief TealException destructor.
     *
     * Included to match the std::exception interfaces.
     */
    ~TealException() throw() {};

   protected:
    /**
     * \brief Protected member representing the string value of the exception.
     */
    std::string msg;
  };

} // namespace TEAL


#endif // _H_TEALEXCEPTION_
